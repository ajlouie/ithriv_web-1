# This is a workflow to build with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - '**'
    tags:
      - 'prod-*.*'
  pull_request:
    branches:
      - '**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - 
        name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]quay.io/ithriv/ithriv_web:$(echo ${GITHUB_REF##*/})"
        id: extract_branch
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      -
        name: Build and push
        if: github.ref == 'refs/heads/master' || contains(github.ref, 'prod')
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.extract_branch.outputs.branch }}
            quay.io/ithriv/ithriv_web:latest
          build-args: |
            BUILD_ENV=prod
      -
        name: Build and push
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.extract_branch.outputs.branch }}
          build-args: |
            BUILD_ENV=dev
      -
        name: Build and push
        if: contains(github.ref, 'release')
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.extract_branch.outputs.branch }}
          build-args: |
            BUILD_ENV=uat
